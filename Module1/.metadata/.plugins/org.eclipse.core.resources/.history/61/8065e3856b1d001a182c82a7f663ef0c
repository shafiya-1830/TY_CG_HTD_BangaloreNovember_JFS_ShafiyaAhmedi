package com.capgemini.contactdetails.dao;

import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.Properties;

import com.capgemini.contactdetails.bean.Contact;

public class ContactDaoImpl implements ContactDao{

	FileReader reader;
	Properties prop;
	Contact contact;
	
	public ContactDaoImpl()
	{
		try {
			reader=new FileReader("data.properties");
			prop=new Properties();
			prop.load(reader);
			contact=new Contact();
			Class.forName(prop.getProperty("driverClass"));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	@Override
	public boolean addContact(Contact contact) {
		try(	Connection conn=DriverManager.getConnection(prop.getProperty("dbUrl"),prop.getProperty("dbUser"),prop.getProperty("dbPassword"));
				PreparedStatement pstmt=conn.prepareStatement(prop.getProperty("insertQuery"));){	
				pstmt.setString(1, contact.getName());
				pstmt.setInt(2, contact.getNumber());
				pstmt.setString(3, contact.getGroup());
		}
		return false;
	}

	@Override
	public boolean deleteContact(String name) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean modifyContact(Contact bean) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Contact getContact(String name) {
		// TODO Auto-generated method stub
		return null;
	}

}













		{
		pstmt.setInt(1, customer.getCustid());
		pstmt.setString(2, customer.getCustName());
		pstmt.setString(3, customer.getStreetAddr1());
		pstmt.setString(4, customer.getStreetAddr2());
		pstmt.setString(5, customer.getTown());
		pstmt.setInt(6, customer.getPostalCode());
		pstmt.setString(7, customer.getEmail());
		pstmt.setLong(8, customer.getPhoneNo());
		int count=pstmt.executeUpdate();

		if(count>0){
			return true;
		}
	}catch(Exception e)		{
		System.out.println(e.getMessage());
	}
	return false;
}

@Override
public boolean deleteCustomer(int custid) {
	try(	Connection conn=DriverManager.getConnection(prop.getProperty("dbUrl"),prop.getProperty("dbUser"),prop.getProperty("dbPassword"));
			PreparedStatement pstmt=conn.prepareStatement(prop.getProperty("deleteQuery"));	)		{
		pstmt.setInt(1, custid);
		int count=pstmt.executeUpdate();
		if(count>0)			{
			return true;
		}
	}catch(Exception e)		{
		e.printStackTrace();
	}
	return false;
}

@Override
public boolean modifyCustomer(CustomerBean customer) {
	try(Connection conn=DriverManager.getConnection(prop.getProperty("dbUrl"),prop.getProperty("dbUser"),prop.getProperty("dbPassword"));
			PreparedStatement pstmt=conn.prepareStatement(prop.getProperty("updateQuery"));	)		{
		pstmt.setInt(8, customer.getCustid());
		pstmt.setString(1, customer.getCustName());
		pstmt.setString(2, customer.getStreetAddr1());
		pstmt.setString(3, customer.getStreetAddr2());
		pstmt.setString(4, customer.getTown());
		pstmt.setInt(5, customer.getPostalCode());
		pstmt.setString(6, customer.getEmail());
		pstmt.setLong(7, customer.getPhoneNo());
		int count=pstmt.executeUpdate();
		if(count>0)			{
			return true;
		}
	}catch(Exception e){
		e.printStackTrace();
	}
	return false;
}
